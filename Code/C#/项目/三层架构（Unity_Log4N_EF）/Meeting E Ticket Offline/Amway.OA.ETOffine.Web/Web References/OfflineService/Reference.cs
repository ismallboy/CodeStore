//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18063 版自动生成。
// 
#pragma warning disable 1591

namespace Amway.OA.ETOffine.Web.OfflineService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ForRemotingWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntitieBase))]
    public partial class ForRemotingWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketLogListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ForRemotingWebService() {
            this.Url = global::Amway.OA.ETOffine.Web.Properties.Settings.Default.Amway_OA_ETOffine_Web_OfflineService_ForRemotingWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetActivityCompletedEventHandler GetActivityCompleted;
        
        /// <remarks/>
        public event GetTicketListCompletedEventHandler GetTicketListCompleted;
        
        /// <remarks/>
        public event GetTicketLogListCompletedEventHandler GetTicketLogListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MsetOfflineActivity GetActivity(string recordID) {
            object[] results = this.Invoke("GetActivity", new object[] {
                        recordID});
            return ((MsetOfflineActivity)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivityAsync(string recordID) {
            this.GetActivityAsync(recordID, null);
        }
        
        /// <remarks/>
        public void GetActivityAsync(string recordID, object userState) {
            if ((this.GetActivityOperationCompleted == null)) {
                this.GetActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivityOperationCompleted);
            }
            this.InvokeAsync("GetActivity", new object[] {
                        recordID}, this.GetActivityOperationCompleted, userState);
        }
        
        private void OnGetActivityOperationCompleted(object arg) {
            if ((this.GetActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivityCompleted(this, new GetActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTicketList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MsetOfflineTicket[] GetTicketList(string recordID) {
            object[] results = this.Invoke("GetTicketList", new object[] {
                        recordID});
            return ((MsetOfflineTicket[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketListAsync(string recordID) {
            this.GetTicketListAsync(recordID, null);
        }
        
        /// <remarks/>
        public void GetTicketListAsync(string recordID, object userState) {
            if ((this.GetTicketListOperationCompleted == null)) {
                this.GetTicketListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketListOperationCompleted);
            }
            this.InvokeAsync("GetTicketList", new object[] {
                        recordID}, this.GetTicketListOperationCompleted, userState);
        }
        
        private void OnGetTicketListOperationCompleted(object arg) {
            if ((this.GetTicketListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketListCompleted(this, new GetTicketListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTicketLogList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MsetOfflineCheckingLog[] GetTicketLogList(string recordID) {
            object[] results = this.Invoke("GetTicketLogList", new object[] {
                        recordID});
            return ((MsetOfflineCheckingLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketLogListAsync(string recordID) {
            this.GetTicketLogListAsync(recordID, null);
        }
        
        /// <remarks/>
        public void GetTicketLogListAsync(string recordID, object userState) {
            if ((this.GetTicketLogListOperationCompleted == null)) {
                this.GetTicketLogListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketLogListOperationCompleted);
            }
            this.InvokeAsync("GetTicketLogList", new object[] {
                        recordID}, this.GetTicketLogListOperationCompleted, userState);
        }
        
        private void OnGetTicketLogListOperationCompleted(object arg) {
            if ((this.GetTicketLogListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketLogListCompleted(this, new GetTicketLogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MsetOfflineActivity : EntitieBase {
        
        private string recordIDField;
        
        private string activitySnField;
        
        private string activityNameField;
        
        private System.Nullable<int> isRealNameField;
        
        private System.Nullable<int> checkingStatusField;
        
        private System.Nullable<int> ticketCountField;
        
        private System.Nullable<int> activityPeopleCountField;
        
        private string activityCityField;
        
        private string activityAddrField;
        
        private System.Nullable<System.DateTime> startTimeField;
        
        private System.Nullable<System.DateTime> endTimeField;
        
        private string activityCategoryField;
        
        private string activityDetailField;
        
        private string activitySubDetailField;
        
        private string creatorField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private string updatorField;
        
        private System.Nullable<System.DateTime> updateDateField;
        
        private int statusField;
        
        private string hostIpField;
        
        private int isHostField;
        
        private System.Nullable<System.DateTime> updateHostTimeField;
        
        /// <remarks/>
        public string RecordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public string ActivitySn {
            get {
                return this.activitySnField;
            }
            set {
                this.activitySnField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityName {
            get {
                return this.activityNameField;
            }
            set {
                this.activityNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IsRealName {
            get {
                return this.isRealNameField;
            }
            set {
                this.isRealNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CheckingStatus {
            get {
                return this.checkingStatusField;
            }
            set {
                this.checkingStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TicketCount {
            get {
                return this.ticketCountField;
            }
            set {
                this.ticketCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ActivityPeopleCount {
            get {
                return this.activityPeopleCountField;
            }
            set {
                this.activityPeopleCountField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityCity {
            get {
                return this.activityCityField;
            }
            set {
                this.activityCityField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityAddr {
            get {
                return this.activityAddrField;
            }
            set {
                this.activityAddrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityCategory {
            get {
                return this.activityCategoryField;
            }
            set {
                this.activityCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityDetail {
            get {
                return this.activityDetailField;
            }
            set {
                this.activityDetailField = value;
            }
        }
        
        /// <remarks/>
        public string ActivitySubDetail {
            get {
                return this.activitySubDetailField;
            }
            set {
                this.activitySubDetailField = value;
            }
        }
        
        /// <remarks/>
        public string Creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string Updator {
            get {
                return this.updatorField;
            }
            set {
                this.updatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string HostIp {
            get {
                return this.hostIpField;
            }
            set {
                this.hostIpField = value;
            }
        }
        
        /// <remarks/>
        public int IsHost {
            get {
                return this.isHostField;
            }
            set {
                this.isHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateHostTime {
            get {
                return this.updateHostTimeField;
            }
            set {
                this.updateHostTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MsetOfflineCheckingLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MsetOfflineTicket))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MsetOfflineActivity))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntitieBase {
        
        private System.Nullable<long> idField;
        
        private System.Nullable<System.DateTime> syncDateField;
        
        private int syncStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SyncDate {
            get {
                return this.syncDateField;
            }
            set {
                this.syncDateField = value;
            }
        }
        
        /// <remarks/>
        public int SyncStatus {
            get {
                return this.syncStatusField;
            }
            set {
                this.syncStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MsetOfflineCheckingLog : EntitieBase {
        
        private string recordIDField;
        
        private string ticketSnField;
        
        private string checkinIpField;
        
        private string machineNameField;
        
        private System.Nullable<System.DateTime> checkinTimeField;
        
        private string adaCardField;
        
        private System.Nullable<int> checkingStatusField;
        
        private int statusField;
        
        /// <remarks/>
        public string RecordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public string TicketSn {
            get {
                return this.ticketSnField;
            }
            set {
                this.ticketSnField = value;
            }
        }
        
        /// <remarks/>
        public string CheckinIp {
            get {
                return this.checkinIpField;
            }
            set {
                this.checkinIpField = value;
            }
        }
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CheckinTime {
            get {
                return this.checkinTimeField;
            }
            set {
                this.checkinTimeField = value;
            }
        }
        
        /// <remarks/>
        public string AdaCard {
            get {
                return this.adaCardField;
            }
            set {
                this.adaCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CheckingStatus {
            get {
                return this.checkingStatusField;
            }
            set {
                this.checkingStatusField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MsetOfflineTicket : EntitieBase {
        
        private string recordIDField;
        
        private string ticketIDField;
        
        private string ticketSnField;
        
        private string categoryField;
        
        private System.Nullable<int> ticketStatusField;
        
        private string checkinIpField;
        
        private string machineNameField;
        
        private System.Nullable<System.DateTime> checkinTimeField;
        
        private string adaCardField;
        
        private string ownerNameField;
        
        private System.Nullable<System.DateTime> importTimeField;
        
        private int statusField;
        
        /// <remarks/>
        public string RecordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public string TicketID {
            get {
                return this.ticketIDField;
            }
            set {
                this.ticketIDField = value;
            }
        }
        
        /// <remarks/>
        public string TicketSn {
            get {
                return this.ticketSnField;
            }
            set {
                this.ticketSnField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TicketStatus {
            get {
                return this.ticketStatusField;
            }
            set {
                this.ticketStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CheckinIp {
            get {
                return this.checkinIpField;
            }
            set {
                this.checkinIpField = value;
            }
        }
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CheckinTime {
            get {
                return this.checkinTimeField;
            }
            set {
                this.checkinTimeField = value;
            }
        }
        
        /// <remarks/>
        public string AdaCard {
            get {
                return this.adaCardField;
            }
            set {
                this.adaCardField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ImportTime {
            get {
                return this.importTimeField;
            }
            set {
                this.importTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetActivityCompletedEventHandler(object sender, GetActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MsetOfflineActivity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MsetOfflineActivity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTicketListCompletedEventHandler(object sender, GetTicketListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MsetOfflineTicket[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MsetOfflineTicket[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTicketLogListCompletedEventHandler(object sender, GetTicketLogListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MsetOfflineCheckingLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MsetOfflineCheckingLog[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591